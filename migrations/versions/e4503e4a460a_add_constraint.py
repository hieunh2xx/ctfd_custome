"""add constraint

Revision ID: e4503e4a460a
Revises: b2bf775c19f4
Create Date: 2024-10-15 12:32:10.477679

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'e4503e4a460a'
down_revision = 'b2bf775c19f4'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Commented out dropping sqlite_sequence unless necessary
    # op.drop_table('sqlite_sequence')  

    # Adding the deployment_name column
    op.add_column('deployed_challenge', sa.Column('deployment_name', sa.String(length=255), nullable=True))
    
    # Altering columns to make them non-nullable
    op.alter_column('deployed_challenge', 'challenge_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('deployed_challenge', 'deploy_state',
               existing_type=sa.TEXT(),
               nullable=False)
    op.alter_column('deployed_challenge', 'last_update',
               existing_type=sa.DATETIME(),
               nullable=False,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))

    # Dropping existing foreign key constraints (name should be specified if possible)
    op.drop_constraint('fk_deployed_challenge_challenge_id', 'deployed_challenge', type_='foreignkey', schema=None)

    # Creating new foreign key constraint
    op.create_foreign_key('fk_deployed_challenge_challenge_id', 'deployed_challenge', 'challenges', ['challenge_id'], ['id'])
    
    # Dropping the user_id column if it exists
    op.drop_column('deployed_challenge', 'user_id')

    # ### end Alembic commands ###

def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Add the user_id column back
    op.add_column('deployed_challenge', sa.Column('user_id', sa.INTEGER(), nullable=True))
    
    # Dropping the newly created foreign key
    op.drop_constraint('fk_deployed_challenge_challenge_id', 'deployed_challenge', type_='foreignkey', schema=None)

    # Re-creating the original foreign key constraints
    op.create_foreign_key('fk_deployed_challenge_user_id', 'deployed_challenge', 'Users', ['user_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('fk_deployed_challenge_challenge_id', 'deployed_challenge', 'Challenges', ['challenge_id'], ['id'], ondelete='CASCADE')
    
    # Reverting alterations to columns
    op.alter_column('deployed_challenge', 'last_update',
               existing_type=sa.DATETIME(),
               nullable=True,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
    op.alter_column('deployed_challenge', 'deploy_state',
               existing_type=sa.TEXT(),
               nullable=True)
    op.alter_column('deployed_challenge', 'challenge_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    
    # Dropping the deployment_name column
    op.drop_column('deployed_challenge', 'deployment_name')

    # Recreate the sqlite_sequence table if needed (optional)
    # op.create_table('sqlite_sequence',
    # sa.Column('name', sa.NullType(), nullable=True),
    # sa.Column('seq', sa.NullType(), nullable=True)
    # )
    
    # ### end Alembic commands ###
